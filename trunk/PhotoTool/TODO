PhotoTool TODO List
-------------------

- Use exif to initially populate database fields.  Export database information
  to exif when requested.

- Browser notebook on main frame with PageBase interface
    - EditPage
    - ViewerPage

- Evolve ViewerPanel, ViewerFrame should use something else (?)

- Create an object repository. (??? Not sure about this ???)
    - Add a reference counter to Record.
    - Repositories are checked first before querying database.
    - Simplifies view refresh cycle, reducing the number of queries.

- AlbumList: Change from wxListBox to a better check list box
    - Try using wxHtmlListBox with HTML check boxes for the album selection
      list.

- Add slide show control panel to SlideShowFrame to complement keyboard
  controls.

- Ordering in PhotoList
- Save selection in PhotoList after re-populating
- Search dialog

- PhotoQuery interface
    - Used in conjunction with PhotoArray to populate lists on demand

- Startup
    - Open setup dialog on first start
    - Optional splash screen

- Database fixes
    - Remove 'external' attribute, and use empty file name to indicate internal
      storage instead.
    - Date field to album

- Use working folder for editing photos, and keep original.

- Popup menu on LookupList for creation and removal of albums and locations.
    - Removal of location or album should warn, then remove references to
      it.
- Add 'Remove from Album' to photo (popup) menu, Library::Delete(photo, album);

- Drag and drop of photos 
    - Add drag source support to ThumbList
    - To change ordering

- Import status
    - Should be able to work with PhotoTool as photos are being imported.

- Wishlist:
    - Record audio description with picture
    - Import video clips
    - Camera integration

Plugin Interface Notes
----------------------

- Plugin interface
    - Plugin directory in photo directory
    - PluginDialog, PluginManager, PluginBase
    - Plugin menu

- Base plugin interface (PluginBase):

    int load_plugin(...)
        - Returns the type of plugin, to be used for furthur initialization by
          the PluginManager.
        - Allocates resources.

    int unload_plugin(...)
        - Deallocates resources.

- Editor plugin interface (PhotoEditPlugin):
    - Name and description of plugin, icon.
    - Event sent (function call) to plugin, along with image instance.
    - Modifies image.
    - Need a way to indicate status.  Plugin could run in thread and send
      events?

- Photo listing sorting/manipulation
    - Takes an album, or PhotoArray, and sorts it by some criteria
    - Sort by color/brightness/contrast
    - Similarity
    - Randomly

- Export plugin
    - Export photos to various mediums.
    - Categorize by album, date, etc.

